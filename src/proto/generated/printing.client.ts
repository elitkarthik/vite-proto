// @generated by protobuf-ts 2.9.6
// @generated from protobuf file "printing.proto" (package "printing", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Printing } from "./printing";
import type { InitializeRequest } from "./printing";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { PrintingServiceResponse } from "./printing";
import type { PrintLinesRequest } from "./printing";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service printing.Printing
 */
export interface IPrintingClient {
    /**
     * @generated from protobuf rpc: PrintLines(printing.PrintLinesRequest) returns (printing.PrintingServiceResponse);
     */
    printLines(input: PrintLinesRequest, options?: RpcOptions): UnaryCall<PrintLinesRequest, PrintingServiceResponse>;
    /**
     * @generated from protobuf rpc: Initialize(printing.InitializeRequest) returns (printing.PrintingServiceResponse);
     */
    initialize(input: InitializeRequest, options?: RpcOptions): UnaryCall<InitializeRequest, PrintingServiceResponse>;
}
/**
 * @generated from protobuf service printing.Printing
 */
export class PrintingClient implements IPrintingClient, ServiceInfo {
    typeName = Printing.typeName;
    methods = Printing.methods;
    options = Printing.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: PrintLines(printing.PrintLinesRequest) returns (printing.PrintingServiceResponse);
     */
    printLines(input: PrintLinesRequest, options?: RpcOptions): UnaryCall<PrintLinesRequest, PrintingServiceResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<PrintLinesRequest, PrintingServiceResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Initialize(printing.InitializeRequest) returns (printing.PrintingServiceResponse);
     */
    initialize(input: InitializeRequest, options?: RpcOptions): UnaryCall<InitializeRequest, PrintingServiceResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<InitializeRequest, PrintingServiceResponse>("unary", this._transport, method, opt, input);
    }
}
